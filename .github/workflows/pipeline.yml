name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Print working directory
        run: pwd
      
      - name: List files in repository
        run: ls -la
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      
      - name: Restore dependencies
        run: dotnet restore SchoolFoodStampsApplication.sln
        working-directory: ./SchoolFoodStampsApplication
      
      - name: Build application
        run: dotnet build SchoolFoodStampsApplication.sln --configuration Release --no-restore
        working-directory: ./SchoolFoodStampsApplication
      
      - name: Run unit tests
        run: dotnet test SchoolFoodStampsApplication.sln --configuration Release --no-restore --verbosity normal
        working-directory: ./SchoolFoodStampsApplication

build-and-push-docker:
  needs: build-and-test
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      run: echo "${{ secrets.TF_VAR_DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.TF_VAR_DOCKERHUB_USERNAME }}" --password-stdin
    
    - name: Build Docker image
      run: |
        docker build -t ogmos/schoolfoodstamps-app:latest .
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        docker tag ogmos/schoolfoodstamps-app:latest ogmos/schoolfoodstamps-app:$TIMESTAMP
    
    - name: Print TIMESTAMP
      run: echo "TIMESTAMP is $TIMESTAMP"
    
    - name: List Docker images
      run: docker images
    
    - name: Push Docker image
      run: |
        docker push ogmos/schoolfoodstamps-app:latest
        docker push ogmos/schoolfoodstamps-app:$TIMESTAMP

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
      
      - name: Initialize Terraform
        run: terraform init
      
      - name: Apply Terraform
        run: |
          terraform apply -auto-approve \
            -var="sql_admin_password=${{ secrets.TF_VAR_SQL_ADMIN_PASSWORD }}" \
            -var="dockerhub_username=${{ secrets.TF_VAR_DOCKERHUB_USERNAME }}" \
            -var="dockerhub_password=${{ secrets.TF_VAR_DOCKERHUB_PASSWORD }}" \
            -var="azure_subscription_id=${{ secrets.TF_VAR_SUBSCRIPTION_ID }}"
