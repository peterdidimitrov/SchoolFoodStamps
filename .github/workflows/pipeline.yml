name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-app-changes.outputs.has_changes }}  # Output change flag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes in application code
        id: check-app-changes
        run: |
            if git rev-list --count HEAD > /dev/null 2>&1 && [ $(git rev-list --count HEAD) -gt 1 ]; then
              if git diff --quiet HEAD^ HEAD -- ./SchoolFoodStampsApplication; then
                echo "has_changes=0" >> $GITHUB_ENV
                echo "has_changes=0" >> $GITHUB_OUTPUT
              else
                echo "has_changes=1" >> $GITHUB_ENV
                echo "has_changes=1" >> $GITHUB_OUTPUT
              fi
            else
              echo "No previous commit found. Assuming changes exist."
              echo "has_changes=1" >> $GITHUB_ENV
              echo "has_changes=1" >> $GITHUB_OUTPUT
            fi

      - name: Cache .NET dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        if: env.has_changes == '1'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        if: env.has_changes == '1'
        run: dotnet restore SchoolFoodStampsApplication.sln
        working-directory: ./SchoolFoodStampsApplication

      - name: Build application
        if: env.has_changes == '1'
        run: dotnet build SchoolFoodStampsApplication.sln --configuration Release --no-restore
        working-directory: ./SchoolFoodStampsApplication

      - name: Run unit tests
        if: env.has_changes == '1'
        run: dotnet test SchoolFoodStampsApplication.sln --configuration Release --no-restore --verbosity normal
        working-directory: ./SchoolFoodStampsApplication

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: needs.build-and-test.outputs.has_changes == '1'  # Only run if there are changes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.TF_VAR_DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.TF_VAR_DOCKERHUB_USERNAME }}" --password-stdin

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        id: build
        run: |
          docker build -t ogmos/schoolfoodstamps-app:latest .
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker tag ogmos/schoolfoodstamps-app:latest ogmos/schoolfoodstamps-app:$TIMESTAMP
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
        working-directory: ./SchoolFoodStampsApplication

      - name: Push Docker image
        run: |
          docker push ogmos/schoolfoodstamps-app:latest
          docker push ogmos/schoolfoodstamps-app:$TIMESTAMP

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize Terraform
        working-directory: ./SchoolFoodStampsApplication
        run: terraform init

      - name: Mark container for replacement
        working-directory: ./SchoolFoodStampsApplication
        run: terraform taint azurerm_container_group.app || true

      - name: Plan Terraform changes
        working-directory: ./SchoolFoodStampsApplication
        run: |
          terraform plan -out=tfplan \
            -var="sql_admin_password=${{ secrets.TF_VAR_SQL_ADMIN_PASSWORD }}" \
            -var="dockerhub_username=${{ secrets.TF_VAR_DOCKERHUB_USERNAME }}" \
            -var="dockerhub_password=${{ secrets.TF_VAR_DOCKERHUB_PASSWORD }}" \
            -var="subscription_id=${{ secrets.TF_VAR_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Apply Terraform changes
        working-directory: ./SchoolFoodStampsApplication
        run: terraform apply -auto-approve tfplan
