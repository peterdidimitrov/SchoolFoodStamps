name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-app-changes.outputs.has_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes in application code
        id: check-app-changes
        run: |
          if [ $(git rev-list --count HEAD) -eq 1 ] || ! git diff --quiet HEAD^ HEAD -- ./SchoolFoodStampsApplication; then
            echo "has_changes=1" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          else
            echo "has_changes=0" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          fi

      - name: Cache .NET dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Setup .NET
        if: ${{ steps.check-app-changes.outputs.has_changes == '1' }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        if: ${{ steps.check-app-changes.outputs.has_changes == '1' }}
        run: dotnet restore --packages ~/.nuget/packages SchoolFoodStampsApplication.sln
        working-directory: ./SchoolFoodStampsApplication

      - name: Build application
        if: ${{ steps.check-app-changes.outputs.has_changes == '1' }}
        run: dotnet build SchoolFoodStampsApplication.sln --configuration Release --no-restore
        working-directory: ./SchoolFoodStampsApplication

      - name: Run unit tests
        if: ${{ steps.check-app-changes.outputs.has_changes == '1' }}
        run: dotnet test SchoolFoodStampsApplication.sln --configuration Release --no-restore --verbosity normal
        working-directory: ./SchoolFoodStampsApplication

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.outputs.has_changes == '1' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.TF_VAR_DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.TF_VAR_DOCKERHUB_USERNAME }}" --password-stdin

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/SchoolFoodStampsApplication/**') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        id: build
        run: |
          docker build -t ogmos/schoolfoodstamps-app:latest .
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker tag ogmos/schoolfoodstamps-app:latest ogmos/schoolfoodstamps-app:$TIMESTAMP
          echo "TIMESTAMP=$TIMESTAMP" | tee -a $GITHUB_ENV
        working-directory: ./SchoolFoodStampsApplication

      - name: Push Docker image
        run: |
          docker push ogmos/schoolfoodstamps-app:latest
          docker push ogmos/schoolfoodstamps-app:$TIMESTAMP

      - name: Deploy to Azure Container Instance
        env:
          AZURE_RESOURCE_GROUP: "schoolfoodstamps-rg"
          AZURE_CONTAINER_NAME: "schoolfoodstamps-app"
          AZURE_REGION: "northeurope"
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          
          # az container delete --name $AZURE_CONTAINER_NAME --resource-group $AZURE_RESOURCE_GROUP --yes
          
          az container create \
            --resource-group $AZURE_RESOURCE_GROUP \
            --name $AZURE_CONTAINER_NAME \
            --image ogmos/schoolfoodstamps-app:latest \
            --dns-name-label schoolfoodstamps-app \
            --ports 80 \
            --cpu 1 --memory 1.5 \
            --restart-policy Always \
            --os-type Linux \
            --environment-variables "DB_CONNECTION_STRING=${{ secrets.AZURE_SQL_CONNECTIONSTRING }}"